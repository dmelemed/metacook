"use strict";angular.module("metacookApp",["ngCookies","ngResource","ngSanitize","ngAnimate","ngMessages","ui.router","ngMaterial"]).config(["$mdIconProvider",function(a){a.iconSet("action","../assets/iconsets/e543088f.action-icons.svg",24).iconSet("alert","../assets/iconsets/4038328b.alert-icons.svg",24).iconSet("av","../assets/iconsets/18e4c0f0.av-icons.svg",24).iconSet("communication","../assets/iconsets/4d699bfa.communication-icons.svg",24).iconSet("content","../assets/iconsets/c3381655.content-icons.svg",24).iconSet("device","../assets/iconsets/60da78f0.device-icons.svg",24).iconSet("editor","../assets/iconsets/aa1322a1.editor-icons.svg",24).iconSet("file","../assets/iconsets/de9cad89.file-icons.svg",24).iconSet("hardware","../assets/iconsets/92f2cc21.hardware-icons.svg",24).iconSet("icons","../assets/iconsets/icons-icons.svg",24).iconSet("image","../assets/iconsets/a2354b54.image-icons.svg",24).iconSet("maps","../assets/iconsets/76a7773d.maps-icons.svg",24).iconSet("navigation","../assets/iconsets/e5865140.navigation-icons.svg",24).iconSet("notification","../assets/iconsets/335d863d.notification-icons.svg",24).iconSet("social","../assets/iconsets/825df62b.social-icons.svg",24).iconSet("toggle","../assets/iconsets/55fe3e40.toggle-icons.svg",24).iconSet("avatar","../assets/iconsets/07e9538b.avatar-icons.svg",128).iconSet("material","../assets/iconsets/a8af240d.mdi-icons.svg",24)}]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider",function(a,b,c,d){b.otherwise("/"),c.html5Mode(!0),d.interceptors.push("authInterceptor")}]).factory("authInterceptor",["$rootScope","$q","$cookieStore","$location",function(a,b,c,d){return{request:function(a){return a.headers=a.headers||{},c.get("token")&&(a.headers.Authorization="Bearer "+c.get("token")),a},responseError:function(a){return 401===a.status?(d.path("/login"),c.remove("token"),b.reject(a)):b.reject(a)}}}]).run(["$rootScope","$location","Auth",function(a,b,c){a.$on("$stateChangeStart",function(a,d){c.isLoggedInAsync(function(c){d.authenticate&&!c&&(a.preventDefault(),b.path("/login"))})})}]),angular.module("metacookApp").config(["$stateProvider",function(a){a.state("login",{url:"/login",templateUrl:"app/account/login/login.html",controller:"LoginCtrl"}).state("signup",{url:"/signup",templateUrl:"app/account/signup/signup.html",controller:"SignupCtrl"}).state("settings",{url:"/settings",templateUrl:"app/account/settings/settings.html",controller:"SettingsCtrl",authenticate:!0})}]),angular.module("metacookApp").controller("LoginCtrl",["$scope","Auth","$location","$window",function(a,b,c,d){a.user={},a.errors={},a.login=function(d){a.submitted=!0,d.$valid&&b.login({email:a.user.email,password:a.user.password}).then(function(){c.path("/")})["catch"](function(b){a.errors.other=b.message})},a.loginOauth=function(a){d.location.href="/auth/"+a}}]),angular.module("metacookApp").controller("SettingsCtrl",["$scope","User","Auth",function(a,b,c){a.errors={},a.changePassword=function(b){a.submitted=!0,b.$valid&&c.changePassword(a.user.oldPassword,a.user.newPassword).then(function(){a.message="Password successfully changed."})["catch"](function(){b.password.$setValidity("mongoose",!1),a.errors.other="Incorrect password",a.message=""})}}]),angular.module("metacookApp").controller("SignupCtrl",["$scope","Auth","$location","$window",function(a,b,c,d){a.user={},a.errors={},a.register=function(d){a.submitted=!0,d.$valid&&b.createUser({name:a.user.name,email:a.user.email,password:a.user.password}).then(function(){c.path("/")})["catch"](function(b){b=b.data,a.errors={},angular.forEach(b.errors,function(b,c){d[c].$setValidity("mongoose",!1),a.errors[c]=b.message})})},a.loginOauth=function(a){d.location.href="/auth/"+a}}]),angular.module("metacookApp").controller("AdminCtrl",["$scope","$http","Auth","User",function(a,b,c,d){a.users=d.query(),a["delete"]=function(b){d.remove({id:b._id}),angular.forEach(a.users,function(c,d){c===b&&a.users.splice(d,1)})}}]),angular.module("metacookApp").config(["$stateProvider",function(a){a.state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminCtrl"})}]),angular.module("metacookApp").controller("EventsController",["$scope","$http","$q",function(a,b,c){function d(){return b.get("/api/calendars").then(function(a){var b=a.data;return console.log("Retrieved list of all calendars",b),b},function(a,b){console.log("Error when getting calendars from server",a)})}function e(){var b=d(),c=[];b.then(function(b){b.forEach(function(a){c[a.id]=a}),a.calendarsMap=c,console.log("CalendarsMap",c)})}function f(a){return"en.usa#holiday@group.v.calendar.google.com"==a?[]:(console.log("Getting events for calendarId",a,"from server"),b.get("/api/calendars/"+a+"/events").then(function(b){return b.data.forEach(function(b,c,d){b.calendarId=a}),b.data},function(a,b){console.log("Error when getting events from server",a,b)}))}function g(c){b.get("/api/calendars/colors").then(function(b){console.log("Retrieved colors from google calendar",b.data),a.calendarColors=b.data.calendar,a.eventColors=b.data.event},function(a){console.log("Error when getting color palette from server",a)})}function h(a){var b=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(a);return b}function i(){var b=d();b.then(function(b){a.calendars=b;var c=b.map(function(a,b){return f(a.id)});Promise.all(c).then(function(b){console.log("Events by calendar",b);var c=[].concat.apply([],b);console.log("All events",c),a.events=c,a.$apply()})})}a.browseBy=["Inbox","Today","Next 7 days"],a.calendarEvent=null,a.events=[],a.calendars=[],a.calendarId=null,i(),g(),e(),a.createNewCalendar=function(a){b.post("/api/calendars",a).then(function(a){console.log("Created new calendar")},function(a){console.log("Error when creating new calendar",a)})},a.createEvent=function(c,d){console.log(d),console.log("Creating new event at current time",c),c.startDateTime=(new Date).toISOString(),c.endDateTime=(new Date).toISOString(),b.post("/api/calendars/"+d+"/events",c).then(function(b){console.log("Successfully added new event",c),a.calendarEvent={},i()})},a.getCalendarNameById=function(b){return console.log("Getting calendar name from calendarId",b),a.calendarsMap[b].summary},a.getCalendarColors=function(b){return console.log("Getting color for calendarId",b),a.calendarsMap[b].backgroundColor},a.getGoogleCalendarColors=function(b){return a.calendarColors[b]},a.getFontFromBackground=function(a){var b=h(a),c=Math.round((299*parseInt(b[1])+587*parseInt(b[2])+114*parseInt(b[3]))/1e3);return c>125?"black":"#FFFFFF"}}]),angular.module("metacookApp").config(["$stateProvider",function(a){a.state("events",{url:"/events",templateUrl:"app/events/events.html",controller:"EventsController"})}]),angular.module("metacookApp").controller("MainCtrl",["$scope","$http",function(a,b){var c="img/list/60.jpeg";a.todos=[];for(var d=0;15>d;d++)a.todos.push({face:c,what:"Brunch this weekend?",who:"Min Li Chan",notes:"I'll be in your neighborhood doing errands."})}]),angular.module("metacookApp").config(["$stateProvider",function(a){a.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"MainCtrl"})}]),angular.module("metacookApp").controller("RecipesController",["$scope","$http",function(a,b){a.recipes=[],b.get("/api/recipes").success(function(b){a.recipes=b,console.log(b)}),a.getColor=function(a){var b=(a+1)%11,c="";switch(b){case 1:c="red";break;case 2:c="green";break;case 3:c="darkBlue";break;case 4:c="blue";break;case 5:c="yellow";break;case 6:c="pink";break;case 7:c="darkBlue";break;case 8:c="purple";break;case 9:c="deepBlue";break;case 10:c="lightPurple";break;default:c="yellow"}return c},a.getSpan=function(a){var b=(a+1)%11;return 1===b||5===b?2:void 0},a.deleteThing=function(a){b["delete"]("/api/things/"+a._id)},a.recipeUrl={url:""},a.imageUrl="",a.getImage=function(c){console.log("invoked"),console.log(c),b.post("/api/ogImage",c).success(function(b){console.log(b),a.imageUrl=b.data.ogImage.url}).error(function(){console.log("error")})}}]),angular.module("metacookApp").config(["$stateProvider",function(a){a.state("recipes",{url:"/recipes",templateUrl:"app/recipes/recipes.html",controller:"RecipesController"})}]),angular.module("metacookApp").factory("Auth",["$location","$rootScope","$http","User","$cookieStore","$q",function(a,b,c,d,e,f){var g={};return e.get("token")&&(g=d.get()),{login:function(a,b){var h=b||angular.noop,i=f.defer();return c.post("/auth/local",{email:a.email,password:a.password}).success(function(a){return e.put("token",a.token),g=d.get(),i.resolve(a),h()}).error(function(a){return this.logout(),i.reject(a),h(a)}.bind(this)),i.promise},logout:function(){e.remove("token"),g={}},createUser:function(a,b){var c=b||angular.noop;return d.save(a,function(b){return e.put("token",b.token),g=d.get(),c(a)},function(a){return this.logout(),c(a)}.bind(this)).$promise},changePassword:function(a,b,c){var e=c||angular.noop;return d.changePassword({id:g._id},{oldPassword:a,newPassword:b},function(a){return e(a)},function(a){return e(a)}).$promise},getCurrentUser:function(){return g},isLoggedIn:function(){return g.hasOwnProperty("role")},isLoggedInAsync:function(a){g.hasOwnProperty("$promise")?g.$promise.then(function(){a(!0)})["catch"](function(){a(!1)}):a(g.hasOwnProperty("role")?!0:!1)},isAdmin:function(){return"admin"===g.role},getToken:function(){return e.get("token")}}}]),angular.module("metacookApp").factory("User",["$resource",function(a){return a("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}}})}]),angular.module("metacookApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}}),angular.module("metacookApp").controller("DialogController",["$scope","$mdDialog","$http",function(a,b,c){a.closeDialog=function(){b.hide()},a.addThing=function(){""!==a.newThing&&(c.post("/api/things",{name:a.newThing}),a.newThing="",b.hide())}}]),angular.module("metacookApp").controller("ShellCtrl",["$mdSidenav","$mdDialog","$scope","$location","Auth",function(a,b,c,d,e){c.isLoggedIn=e.isLoggedIn,c.isAdmin=e.isAdmin,c.getCurrentUser=e.getCurrentUser,c.logout=function(){e.logout(),d.path("/login")},c.isActive=function(a){return a===d.path()},c.toggleLeft=function(){a("left").toggle()};var f;c.openMenu=function(a,b){f=b,a(b)},c.notificationsEnabled=!0,c.toggleNotifications=function(){c.notificationsEnabled=!c.notificationsEnabled},c.redial=function(){b.show(b.alert().targetEvent(f).clickOutsideToClose(!0).parent("body").title("Suddenly, a redial").content("You just called a friend; who told you the most amazing story. Have a cookie!").ok("That was easy")),f=null},c.checkVoicemail=function(){},c.showAddDialog=function(a){var c=angular.element(document.body);b.show({parent:c,targetEvent:a,templateUrl:"components/shell/dialog/dialog.html",controller:"DialogController"})}}]),angular.module("metacookApp").run(["$templateCache",function(a){a.put("app/account/login/login.html",'<md-content class=md-padding><md-card class=login-card><md-card-content><h2 class=md-title>Login</h2><p>Accounts are reset on server restart from <code>server/config/seed.js</code>. Default account is <code>test@test.com</code> / <code>test</code></p><p>Admin account is <code>admin@admin.com</code> / <code>admin</code></p><form name=form ng-submit=login(form) novalidate><md-input-container><label>Email</label><input required type=email name=email ng-model=user.email><div ng-messages=form.email.$error><div ng-message=required>This is required.</div></div></md-input-container><md-input-container><label>Password</label><input required type=password name=password ng-model=user.password><div ng-messages=form.password.$error><div ng-message=required>This is required.</div></div></md-input-container><div layout=row><md-button class=md-primary type=submit>Login</md-button><md-button flex type=submit href=/signup>Register</md-button></div></form></md-card-content></md-card><div class=love-message>Generated with<md-icon md-svg-icon=action:favorite class=md-warn></md-icon>by <a href=https://github.com/sincraianul/generator-angular-material-fullstack>generator-angular-material-fullstack</a>.</div></md-content><!-- <div class="container">\r\n  <div class="row">\r\n    <div class="col-sm-12">\r\n      <h1>Login</h1>\r\n      <p>Accounts are reset on server restart from <code>server/config/seed.js</code>. Default account is <code>test@test.com</code> / <code>test</code></p>\r\n      <p>Admin account is <code>admin@admin.com</code> / <code>admin</code></p>\r\n    </div>\r\n    <div class="col-sm-12">\r\n      <form class="form" name="form" ng-submit="login(form)" novalidate>\r\n\r\n        <div class="form-group">\r\n          <label>Email</label>\r\n\r\n          <input type="email" name="email" class="form-control" ng-model="user.email" required>\r\n        </div>\r\n\r\n        <div class="form-group">\r\n          <label>Password</label>\r\n\r\n          <input type="password" name="password" class="form-control" ng-model="user.password" required>\r\n        </div>\r\n\r\n        <div class="form-group has-error">\r\n          <p class="help-block" ng-show="form.email.$error.required && form.password.$error.required && submitted">\r\n             Please enter your email and password.\r\n          </p>\r\n          <p class="help-block" ng-show="form.email.$error.email && submitted">\r\n             Please enter a valid email.\r\n          </p>\r\n\r\n          <p class="help-block">{{ errors.other }}</p>\r\n        </div>\r\n\r\n        <div>\r\n          <button class="btn btn-inverse btn-lg btn-login" type="submit">\r\n            Login\r\n          </button>\r\n          <a class="btn btn-default btn-lg btn-register" href="/signup">\r\n            Register\r\n          </a>\r\n        </div>\r\n\r\n        <hr>\r\n        <div>\r\n          <a class="btn btn-facebook" href="" ng-click="loginOauth(\'facebook\')">\r\n            <i class="fa fa-facebook"></i> Connect with Facebook\r\n          </a>\r\n          <a class="btn btn-google-plus" href="" ng-click="loginOauth(\'google\')">\r\n            <i class="fa fa-google-plus"></i> Connect with Google+\r\n          </a>\r\n          <a class="btn btn-twitter" href="" ng-click="loginOauth(\'twitter\')">\r\n            <i class="fa fa-twitter"></i> Connect with Twitter\r\n          </a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <hr>\r\n</div> -->'),a.put("app/account/settings/settings.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Change Password</h1></div><div class=col-sm-12><form class=form name=form ng-submit=changePassword(form) novalidate><div class=form-group><label>Current Password</label><input type=password name=password class=form-control ng-model=user.oldPassword mongoose-error><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.other }}</p></div><div class=form-group><label>New Password</label><input type=password name=newPassword class=form-control ng-model=user.newPassword ng-minlength=3 required><p class=help-block ng-show="(form.newPassword.$error.minlength || form.newPassword.$error.required) && (form.newPassword.$dirty || submitted)">Password must be at least 3 characters.</p></div><p class=help-block>{{ message }}</p><button class="btn btn-lg btn-primary" type=submit>Save changes</button></form></div></div></div>'),a.put("app/account/signup/signup.html",'<md-content class=md-padding><md-card class=register-card><md-card-content><h2 class=md-title>Sign up</h2><form name=form ng-submit=register(form) novalidate><md-input-container><label>Name</label><input required name=name ng-model=user.name><div ng-messages=form.name.$error><div ng-message=required>This is required.</div></div></md-input-container><md-input-container><label>Email</label><input required name=email type=email ng-model=user.email><div ng-messages=form.email.$error><div ng-message=required>This is required.</div></div></md-input-container><md-input-container><label>Password</label><input required type=password name=password ng-model=user.password><div ng-messages=form.password.$error><div ng-message=required>This is required.</div></div></md-input-container><div layout=row><md-button class=md-primary type=submit>Sign up</md-button><md-button flex type=submit href=/signup>Login</md-button></div></form></md-card-content></md-card><div class=love-message>Generated with<md-icon md-svg-icon=action:favorite class=md-warn></md-icon>by <a href=https://github.com/sincraianul/generator-angular-material-fullstack>generator-angular-material-fullstack</a>.</div></md-content><!-- <div ng-include="\'components/navbar/navbar.html\'"></div>\r\n\r\n<div class="container">\r\n  <div class="row">\r\n    <div class="col-sm-12">\r\n      <h1>Sign up</h1>\r\n    </div>\r\n    <div class="col-sm-12">\r\n      <form class="form" name="form" ng-submit="register(form)" novalidate>\r\n\r\n        <div class="form-group" ng-class="{ \'has-success\': form.name.$valid && submitted,\r\n                                            \'has-error\': form.name.$invalid && submitted }">\r\n          <label>Name</label>\r\n\r\n          <input type="text" name="name" class="form-control" ng-model="user.name"\r\n                 required/>\r\n          <p class="help-block" ng-show="form.name.$error.required && submitted">\r\n            A name is required\r\n          </p>\r\n        </div>\r\n\r\n        <div class="form-group" ng-class="{ \'has-success\': form.email.$valid && submitted,\r\n                                            \'has-error\': form.email.$invalid && submitted }">\r\n          <label>Email</label>\r\n\r\n          <input type="email" name="email" class="form-control" ng-model="user.email"\r\n                 required\r\n                 mongoose-error/>\r\n          <p class="help-block" ng-show="form.email.$error.email && submitted">\r\n            Doesn\'t look like a valid email.\r\n          </p>\r\n          <p class="help-block" ng-show="form.email.$error.required && submitted">\r\n            What\'s your email address?\r\n          </p>\r\n          <p class="help-block" ng-show="form.email.$error.mongoose">\r\n            {{ errors.email }}\r\n          </p>\r\n        </div>\r\n\r\n        <div class="form-group" ng-class="{ \'has-success\': form.password.$valid && submitted,\r\n                                            \'has-error\': form.password.$invalid && submitted }">\r\n          <label>Password</label>\r\n\r\n          <input type="password" name="password" class="form-control" ng-model="user.password"\r\n                 ng-minlength="3"\r\n                 required\r\n                 mongoose-error/>\r\n          <p class="help-block"\r\n             ng-show="(form.password.$error.minlength || form.password.$error.required) && submitted">\r\n            Password must be at least 3 characters.\r\n          </p>\r\n          <p class="help-block" ng-show="form.password.$error.mongoose">\r\n            {{ errors.password }}\r\n          </p>\r\n        </div>\r\n\r\n        <div>\r\n          <button class="btn btn-inverse btn-lg btn-login" type="submit">\r\n            Sign up\r\n          </button>\r\n          <a class="btn btn-default btn-lg btn-register" href="/login">\r\n            Login\r\n          </a>\r\n        </div>\r\n\r\n        <hr>\r\n        <div>\r\n          <a class="btn btn-facebook" href="" ng-click="loginOauth(\'facebook\')">\r\n            <i class="fa fa-facebook"></i> Connect with Facebook\r\n          </a>\r\n          <a class="btn btn-google-plus" href="" ng-click="loginOauth(\'google\')">\r\n            <i class="fa fa-google-plus"></i> Connect with Google+\r\n          </a>\r\n          <a class="btn btn-twitter" href="" ng-click="loginOauth(\'twitter\')">\r\n            <i class="fa fa-twitter"></i> Connect with Twitter\r\n          </a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <hr>\r\n</div> -->'),a.put("app/admin/admin.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><p>The delete user and user index api routes are restricted to users with the \'admin\' role.</p><ul class=list-group><li class=list-group-item ng-repeat="user in users"><strong>{{user.name}}</strong><br><span class=text-muted>{{user.email}}</span> <a ng-click=delete(user) class=trash><span class="glyphicon glyphicon-trash pull-right"></span></a></li></ul></div>'),a.put("app/events/events.html",'<div ng-include="\'components/shell/shell.html\'"></div><div style="height: 100vh" layout=row><!-- LEFT BAR --><section class=bg-grey flex=30 layout=row><div flex></div><div flex=80 style="padding: 20px" layout=column><div><md-list-item ng-click="navigateTo(setting.extraScreen, $event)" ng-repeat="date in browseBy"><!--                 <md-icon md-svg-icon="{{setting.icon}}"></md-icon> --><p>{{ date }}</p></md-list-item></div><section><md-toolbar class=md-theme-light><h2 class=md-toolbar-tools><span>Categories</span></h2></md-toolbar><div><md-list-item ng-style="{color: calendar.backgroundColor}" ng-repeat="calendar in calendars"><p>{{ calendar.summary }}</p></md-list-item></div></section></div></section><!-- MIDDLE SECTION --><section flex=60><md-toolbar md-scroll-shrink ng-if=true class=md-accent><div class=md-toolbar-tools><h2 class=md-flex>Events</h2></div></md-toolbar><md-card><form><div layout=row><md-input-container flex=80 style="margin-bottom: 0px; margin-right: 20px"><label>A short title for your event</label><input ng-model=calendarEvent.summary></md-input-container><md-input-container flex style="float: right"><label>Category</label><md-select ng-model=calendarId><md-option value={{calendar.id}} ng-repeat="calendar in calendars" ng-style="{color: category.color}">{{calendar.summary}}</md-option></md-select></md-input-container><md-button class=md-icon-button ng-click=showAlarmPrompt() aria-label="Add Calendar" style="float: right; margin-top: 17px"><md-icon md-svg-icon=material:calendar-plus></md-icon></md-button></div><div layout=row><md-input-container flex=80 style="margin-top: 0px; margin-bottom: 0px; margin-right: 20px"><label>A description of your event</label><input ng-model=calendarEvent.description></md-input-container><md-button class=md-icon-button aria-label=Alarm style="float: right; margin-top: 17px"><md-icon md-svg-icon=action:alarm></md-icon></md-button><!-- <md-datepicker flex ng-model="birthday "></md-datepicker> --></div><div><md-button class="md-raised md-primary" ng-click="createEvent(calendarEvent, calendarId)">Save</md-button><md-button>Cancel</md-button></div></form></md-card><md-card><md-list><md-list-item class=md-3-line ng-repeat="event in events "><!--                     <img ng-src="{{item.face}} " alt="{{item.who}} " class="md-avatar "> --><md-checkbox></md-checkbox><div class=md-list-item-text><h3>{{event.summary}}</h3><h4 ng-style="{\'color\': getCalendarColors(event.calendarId)}">{{getCalendarNameById(event.calendarId)}}</h4><!--                         <md-chips readonly="true">\r\n                            <md-chip ng-style="{\'color\': getFontFromBackground(getCategoryColor(event.category)), \'background-color\': getCategoryColor(event.category)}"> {{getEventCategoryById(event.category)}}\r\n                            </md-chip>\r\n                        </md-chips> --><p>{{event.description}}</p></div><md-divider inset></md-divider></md-list-item></md-list></md-card></section><!-- RIGHT BAR --><section class=bg-grey hide show-gt-sm flex></section></div><!-- <iframe src="https://calendar.google.com/calendar/embed?src=dmelemed3%40gmail.com&ctz=America/New_York " style="border: 0 " width="800 " height="600 " frameborder="0 " scrolling="no "></iframe>\r\n -->'),a.put("app/main/main.html",'<div ng-include="\'components/shell/shell.html\'"></div><md-grid-list class=things-list md-cols-sm=1 md-cols-md=2 md-cols-gt-md=5 md-row-height-gt-md=1:1 md-row-height=4:3 md-gutter=8px md-gutter-gt-sm=4px><md-grid-tile ng-repeat="thing in awesomeThings" ng-class=getColor($index) md-rowspan={{getSpan($index)}} md-colspan={{getSpan($index)}} md-colspan-sm=1><md-icon class=avatar-icon md-svg-icon="avatar:svg-{{ ($index + 1) % 11 }}"></md-icon><md-grid-tile-footer><h3>{{thing.name}}</h3></md-grid-tile-footer></md-grid-tile></md-grid-list>'),a.put("app/recipes/recipes.html",'<div ng-include="\'components/shell/shell.html\'"></div><md-grid-list class=things-list md-cols=4 md-row-height=300px md-gutter=8px md-gutter-gt-sm=4px><md-grid-tile ng-repeat="recipe in recipes"><!--ng-class="getColor($index)"--><md-card><md-card-title layout=column><md-card-title-text><span class=md-headline>{{recipe.name}}</span><!-- By {{recipe.author}} --><!--           <span class="md-subhead">{{recipe.time}}</span>\r\n --></md-card-title-text><md-card-title-media><div class="md-media-sm card-media"><img ng-src={{recipe.imageUrl}}></div></md-card-title-media></md-card-title><!--       <md-card-content style="background-color:lightblue;">\r\n --><!--  <md-icon class="avatar-icon" md-svg-icon="avatar:svg-{{ ($index + 1) % 11 }}"></md-icon> --><!-- </md-card-content> --><md-card-actions layout=row layout-align="end center"><md-button>Action 1</md-button><md-button>Action 2</md-button></md-card-actions></md-card><!--<md-grid-tile-footer></md-grid-tile-footer>--></md-grid-tile></md-grid-list><form>this is a test url <input type=url name=url ng-model=recipeUrl.url></form><button ng-click=getImage(recipeUrl)>Click here</button> <img ng-src={{imageUrl}} alt="Your image will appear when you submit a url" height=100 width=100>'),a.put("components/shell/dialog/dialog.html",'<md-dialog aria-label="List dialog"><md-dialog-content><h2 class=md-title>Set a description for the new thing</h2><form name=projectForm><md-input-container><label>Description</label><input md-maxlength=30 required name=description ng-model=newThing><div ng-messages=projectForm.description.$error><div ng-message=required>This is required.</div><div ng-message=md-maxlength>The name has to be less than 30 characters long.</div></div></md-input-container></form></md-dialog-content><div class=md-actions><md-button ng-click=closeDialog() class=md-primary>Cancel</md-button><md-button ng-click=addThing() class=md-primary>Save</md-button></div></md-dialog>'),a.put("components/shell/shell.html",'<div ng-controller=ShellCtrl class=main-shell><md-sidenav class="md-sidenav-left md-whiteframe-z2" md-component-id=left><md-toolbar class="md-tall md-accent"><div ng-if=isLoggedIn() layout=column layout-padding class=profile-container><div flex></div><div layout-padding layout=column><div class=profile-name>{{ getCurrentUser().name }}</div><div class=profile-email>{{ getCurrentUser().email }}</div></div></div></md-toolbar><md-content layout-padding></md-content></md-sidenav><md-toolbar><div class=md-toolbar-tools><md-button ng-click=toggleLeft() class=md-icon-button aria-label=Settings><md-icon md-svg-icon=assets/icons/fe6be280.menu.svg></md-icon></md-button><h2><span>metacook</span></h2><span flex=""></span><md-menu><md-button aria-label="Open phone interactions menu" class=md-icon-button ng-click="openMenu($mdOpenMenu, $event)"><md-icon md-menu-origin md-svg-icon=assets/icons/c1074e00.dots-vertical.svg></md-icon></md-button><md-menu-content width=4><md-menu-item><md-button ng-click=showAddDialog($event)><md-icon md-svg-icon=content:add md-menu-align-target></md-icon>Add</md-button></md-menu-item><md-menu-item><md-button ng-click=redial($event)><md-icon md-svg-icon=communication:dialpad md-menu-align-target></md-icon>Redial</md-button></md-menu-item><md-menu-item><md-button disabled ng-click=checkVoicemail()><md-icon md-svg-icon=communication:voicemail></md-icon>Check voicemail</md-button></md-menu-item><md-menu-item><md-button ng-click=toggleNotifications()><md-icon md-svg-icon="social:notifications{{notificationsEnabled ? \'_off\' : \'\'}}"></md-icon>{{notificationsEnabled ? \'Disable\' : \'Enable\' }} notifications</md-button></md-menu-item><md-menu-divider></md-menu-divider><md-menu-item ng-hide=isLoggedIn() ui-sref=login><md-button><md-icon md-svg-icon=action:input></md-icon>Login</md-button></md-menu-item><md-menu-item ng-hide=isLoggedIn() ui-sref=signup><md-button><md-icon md-svg-icon=action:launch></md-icon>Signup</md-button></md-menu-item><md-menu-item ng-show=isLoggedIn()><md-button ng-click=logout()><md-icon md-svg-icon=action:exit_to_app></md-icon>Logout</md-button></md-menu-item></md-menu-content></md-menu></div></md-toolbar></div>')}]);